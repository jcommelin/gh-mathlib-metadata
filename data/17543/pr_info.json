{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 897,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "j-loreaux"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 67,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6PEELS",
              "body": "### PR summary [d8ab2152c5](https://github.com/leanprover-community/mathlib4/pull/17543/commits/d8ab2152c5053485ea9ba0a7b14c68b9a49aaf28)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`++++++------ closure_induction'`\n`+++---++++---- closure_induction₂`\n`+++----+++++---- closure_induction`\n`++-+--+ adjoin_induction`\n`++-- adjoin_induction'`\n`++-- dense_induction`\n`-++--+ adjoin_induction₂`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-10-08T15:44:44Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PK5ud",
              "body": "It's great that we add these dependent induction lemmas, but I think it's sometimes nice to also have access to the non-dependent ones, since they're sometimes easier to work with. For example, when it's necessary to specify the motive to a dependent induction in the case where the application is not dependent, you often end up with things looking syntactically really confusing. I'd personally slightly prefer keeping the old ones around, under other names. But if it turns out that adjusting mathlib to your change is easy enough, then it's probably fine...",
              "createdAt": "2024-10-09T10:58:08Z",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PLwxK",
              "body": "You should never have to specify the motive explicitly though? Usually when you do, this is because:\r\n* The induction principle was not dependent, and should have been\r\n* The induction principle has the arguments in the wrong order\r\n* `elab_as_elim` is missing from the theorem\r\n* You tried to use `apply` with an `elab_as_elim`",
              "createdAt": "2024-10-09T12:46:14Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PMbsa",
              "body": "> You should never have to specify the motive explicitly though? \r\n\r\nNote that the current state of this PR has exactly one adaptation going from the non-dependent to the dependent one, in `dense_induction`. And the motive is specified explicitly here, in a non-dependent way: exactly the situation I'm worried about. \r\nIt's possible that this is an isolated example, but I just want to flag it because it does get annoying in practice.\r\n",
              "createdAt": "2024-10-09T13:47:32Z",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6POk2p",
              "body": "@b-mehta I *think* that `refine` can get confused, but that's primarily because `dense_induction` is weird in that the term on which we are doing induction (namely `x`) doesn't reference `s` in it's type, so it's a bit underdetermined. Nevertheless, I think Eric is right, so long as you actually use the `induction` tactic. For instance, this works for `Subsemigroup.dense_induction`.\r\n```lean\r\ntheorem dense_induction {p : M → Prop} {s : Set M} (hs : closure s = ⊤)\r\n    (mem : ∀ x ∈ s, p x)\r\n    (mul : ∀ x y, p x → p y → p (x * y))\r\n    (x : M) : p x := by\r\n  induction hs.symm ▸ mem_top x using closure_induction with\r\n  | mem x hx => exact mem x hx\r\n  | mul x _ y _ hpx hpy => exact mul x y hpx hpy\r\n```\r\n\r\nOverall, while it was a lot of work to go through changing things, it wasn't terrible. This `dense_induction` issue hardly ever came up (at least in terms of *new* places where I needed to specify the motive). You're welcome to have a look and let me know what you think.\r\n",
              "createdAt": "2024-10-09T18:05:33Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PPLQc",
              "body": "I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.",
              "createdAt": "2024-10-09T18:54:08Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PQo3-",
              "body": "> I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.\r\n\r\nI considered that, but I think it might be really confusing if we *only* swap the names on some of them.",
              "createdAt": "2024-10-09T21:58:53Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PQw7C",
              "body": "> > I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.\r\n> \r\n> I considered that, but I think it might be really confusing if we _only_ swap the names on some of them.\r\n\r\nI'm not suggesting we swap the names, but that both the primed and unprimed versions refer to the dependent ones. That way people don't have to guess to work out that they just need to remove the `'`.",
              "createdAt": "2024-10-09T22:28:34Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PS9uR",
              "body": "> I'm not suggesting we swap the names, but that both the primed and unprimed versions refer to the dependent ones. That way people don't have to guess to work out that they just need to remove the `'`\r\n\r\nDone",
              "createdAt": "2024-10-10T06:05:56Z",
              "author": {
                "login": "j-loreaux"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "213cb18da7a103aac1084e486efde2fdb412c361",
                "additions": 52,
                "deletions": 48,
                "committedDate": "2024-10-08T14:32:33Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiOWg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721584/job/31240785498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiOUg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721586/job/31240785490"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiRng",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721584/job/31240786334"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiQCA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721586/job/31240785928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiRgA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721586/job/31240786304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiP9A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721584/job/31240785908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiTUw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721584/job/31240786771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhuC-w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721586/job/31240979195"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "309fd33d76d9865279ab68faa2fb334ad5700f6d",
                "additions": 11,
                "deletions": 11,
                "committedDate": "2024-10-08T14:49:02Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn1Qvg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239708429/job/31247388862"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn2eRQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239714832/job/31247408709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn1PBw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239708416/job/31247388423"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn2ekQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239714837/job/31247408785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn1O5A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239708430/job/31247388388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn2eXQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239714830/job/31247408733"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmvdQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008369/job/31245053813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmvuQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008365/job/31245053881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmv2Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008377/job/31245053913"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiehTg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016321/job/31241773390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiejjw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016348/job/31241773967"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmxjw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008368/job/31245054351"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn1O7A",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239708429/job/31247388396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn2gfQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239714832/job/31247409277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRielKA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016321/job/31241774376"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiehcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016348/job/31241773427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmwKg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008368/job/31245053994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiefkQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016348/job/31241772945"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiejhQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016321/job/31241773957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRienCQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016321/job/31241774857"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRi9SpQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016348/job/31242277541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlnjEA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31245067024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlo_iw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "cb4e3fa7a7b80bb063e3dbac99a9c53458ce0156",
                "additions": 12,
                "deletions": 19,
                "committedDate": "2024-10-08T17:19:04Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "20b85f87a67aa5978d0178a3232a6f8327061fbb",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-10-08T19:00:48Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4d8ce3ba0af58960b2fafeb22f3d25add2355ecb",
                "additions": 20,
                "deletions": 35,
                "committedDate": "2024-10-08T19:01:40Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "46b219a8487eabf29f81d8e84c493934020a9d6e",
                "additions": 71,
                "deletions": 71,
                "committedDate": "2024-10-09T17:18:37Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "260ae177028febebd0e11adbcf8761f718e8f4e6",
                "additions": 29,
                "deletions": 12,
                "committedDate": "2024-10-09T17:19:10Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8a467f4bd55b2622be42a3d43d80b183c9967b87",
                "additions": 79,
                "deletions": 63,
                "committedDate": "2024-10-09T17:19:24Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "51b381663b84c122906e5dc96711422e326de93f",
                "additions": 60,
                "deletions": 54,
                "committedDate": "2024-10-09T17:19:38Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6804fe6b535468e1638c9e27aa5d6839fd2cccbe",
                "additions": 92,
                "deletions": 83,
                "committedDate": "2024-10-09T17:19:51Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0db929628325d94c21b11e8169a0dedd06526810",
                "additions": 68,
                "deletions": 65,
                "committedDate": "2024-10-09T17:21:02Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a98fc9c393216cb1812c0b0ac1f156708dd1b883",
                "additions": 5,
                "deletions": 4,
                "committedDate": "2024-10-09T17:21:29Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6242358a551691b64ed94f7715c894579d3bfa5c",
                "additions": 73,
                "deletions": 65,
                "committedDate": "2024-10-09T17:21:41Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "75a4fe49e3c25bb6e5b8eb6b72c2616b91acdafa",
                "additions": 52,
                "deletions": 40,
                "committedDate": "2024-10-09T17:21:57Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f99040a128af97e3ea1aad97fe6a133bbe124822",
                "additions": 115,
                "deletions": 112,
                "committedDate": "2024-10-09T17:22:36Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a676437959e75aa0f40dc7b5119643f01a9065cc",
                "additions": 14,
                "deletions": 13,
                "committedDate": "2024-10-09T17:22:58Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "100819f9ba1d4beed0d925f67e0775acaef2064f",
                "additions": 8,
                "deletions": 5,
                "committedDate": "2024-10-09T17:23:12Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2b519f09b3f0d64ab94e371d91781c1160861116",
                "additions": 80,
                "deletions": 78,
                "committedDate": "2024-10-09T17:23:25Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a762bef47171c184daaac6f0afc93b7794eac567",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2024-10-09T17:23:36Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8460b35fc70e1b61db772f54e89d177e862e5ec2",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2024-10-09T17:23:57Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7c4cad091905b5377fbe54483f508116f941cb20",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-10-09T17:24:05Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dbe7ef0166e44a42ea6fda8e198508c5efe6fd98",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2024-10-09T17:25:27Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSj1n6w",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11260024591/job/31310309355"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnsy6g",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261280948/job/31314359018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnyrWQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261308682/job/31314455385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvVTjA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263755911/job/31322362764"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvmSuw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263843306/job/31322641083"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSj1lkA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11260024605/job/31310308752"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnsxlQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261280965/job/31314358677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnyo5Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261308686/job/31314454757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvVSxA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263755909/job/31322362564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvmSVA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263843327/job/31322640980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSj1mBA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11260024612/job/31310308868"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnsxNw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261280952/job/31314358583"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnyokw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261308685/job/31314454675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvVTLw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263755910/job/31322362671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvmSgg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263843319/job/31322641026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju6VA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259987257/job/31310199380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju6jg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259987273/job/31310199438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju2cw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986662/job/31310198387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju2rg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986673/job/31310198446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju7qQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259987262/job/31310199721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSj1lfw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11260024591/job/31310308735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnsxOg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261280948/job/31314358586"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnypbw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261308682/job/31314454895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvVVeQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263755911/job/31322363257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvmOUA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263843306/job/31322639952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju4AQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986662/job/31310198785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju30g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986673/job/31310198738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju6kg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259987262/job/31310199442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju1BA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986662/job/31310198020"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju1Rg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986673/job/31310198086"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju5Uw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986662/job/31310199123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSlybNg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986673/job/31312354102"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSjvo9w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31310211319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSjwTUg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "147f9fe94b262cb3b9f104db4605f73ebd3477ca",
                "additions": 113,
                "deletions": 111,
                "committedDate": "2024-10-09T22:12:53Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSwKoUA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11264048929/job/31323236432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS5r5HQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11267683348/job/31333218589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSwKpTg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11264048931/job/31323236686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS5r39g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11267683342/job/31333218294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSwKohQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11264048930/job/31323236485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS5r3_g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11267683349/job/31333218302"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqenw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866482/job/31322709663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqfWw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866491/job/31322709851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqeuA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866374/job/31322709688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqe2A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866376/job/31322709720"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqf5A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866484/job/31322709988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSwKpbQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11264048929/job/31323236717"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS5r4kA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11267683348/job/31333218448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqf7Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866374/job/31322709997"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqf6Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866376/job/31322709993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqelQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866484/job/31322709653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqdsw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866374/job/31322709427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqdzg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866376/job/31322709454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqhCQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866374/job/31322710281"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSw93Jw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866376/job/31324075815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvq62A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31322716888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvrXAQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d8ab2152c5053485ea9ba0a7b14c68b9a49aaf28",
                "additions": 91,
                "deletions": 34,
                "committedDate": "2024-10-10T06:01:17Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7ZkZA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372506/job/31335015524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7ZkMA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372483/job/31335015472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7ZjDQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372491/job/31335015181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RQWQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322943/job/31334879321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RQZw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322950/job/31334879335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RMcQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RNyA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RRWA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322953/job/31334879576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7Zivw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372506/job/31335015103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RNsw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878643"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7ROcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RQpA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322953/job/31334879396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RMjQ",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878349"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RObQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878829"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RPLw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334879023"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RqtQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31334886069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7SZEQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-10-08T15:44:00Z",
        "deletions": 775,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Algebra/NonUnitalSubalgebra.lean",
              "additions": 72,
              "deletions": 65
            },
            {
              "path": "Mathlib/Algebra/Algebra/Subalgebra/Pointwise.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Algebra/Tower.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/DirectLimit.lean",
              "additions": 8,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Basic.lean",
              "additions": 56,
              "deletions": 50
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Pointwise.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Basic.lean",
              "additions": 46,
              "deletions": 30
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Membership.lean",
              "additions": 13,
              "deletions": 21
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Operations.lean",
              "additions": 2,
              "deletions": 7
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Pointwise.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Group/Subsemigroup/Basic.lean",
              "additions": 39,
              "deletions": 25
            },
            {
              "path": "Mathlib/Algebra/Group/Subsemigroup/Membership.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Subsemigroup/Operations.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Lie/BaseChange.lean",
              "additions": 7,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Lie/Character.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Lie/IdealOperations.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Lie/TraceForm.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Chain.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Killing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Bilinear.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Pointwise.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Star.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Star/Basic.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/Ring/Subring/Basic.lean",
              "additions": 96,
              "deletions": 83
            },
            {
              "path": "Mathlib/Algebra/Ring/Subsemiring/Basic.lean",
              "additions": 63,
              "deletions": 54
            },
            {
              "path": "Mathlib/Algebra/RingQuot.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Star/NonUnitalSubalgebra.lean",
              "additions": 8,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Star/Subalgebra.lean",
              "additions": 52,
              "deletions": 40
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Instances.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Fourier/AddCircle.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/StarOrder.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/Finite/GaloisField.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/GroupTheory/Coxeter/Basic.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Nilpotent.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/GroupTheory/Perm/ClosureSwap.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/CliffordAlgebra/Even.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/FiniteSpan.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Span.lean",
              "additions": 77,
              "deletions": 71
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorProduct/RightExactness.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorProduct/Tower.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/Basic.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Adjoin/Basic.lean",
              "additions": 76,
              "deletions": 65
            },
            {
              "path": "Mathlib/RingTheory/Adjoin/Tower.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/Ideal.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/Derivation/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/EssentialFiniteness.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/FinitePresentation.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/RingTheory/FiniteType.lean",
              "additions": 11,
              "deletions": 11
            },
            {
              "path": "Mathlib/RingTheory/Finiteness.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/FractionalIdeal/Extended.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/FractionalIdeal/Operations.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Maps.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Operations.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/RingTheory/IntegralClosure/IsIntegralClosure/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Kaehler/Basic.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/RingTheory/Localization/Submodule.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/MvPolynomial/Localization.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/NonUnitalSubring/Basic.lean",
              "additions": 79,
              "deletions": 63
            },
            {
              "path": "Mathlib/RingTheory/NonUnitalSubsemiring/Basic.lean",
              "additions": 29,
              "deletions": 12
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Basic.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Bernstein.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/TwoSidedIdeal/Operations.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/StarSubalgebra.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/StarOrdered.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/StoneWeierstrass.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "j-loreaux/induction-prime",
        "headRefOid": "d8ab2152c5053485ea9ba0a7b14c68b9a49aaf28",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c59-DM0",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
              "name": "tech debt"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6MkvQh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-09T22:29:19Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17543,
        "potentialMergeCommit": {
          "oid": "9fbad6b32bbce67da8420eef40d608b87b3dc74f"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6MXm7z",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-08T16:27:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MXnIU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-08T16:28:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MiMxt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-09T17:27:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MjE8n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-09T18:55:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MjHyM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-09T18:57:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Mkoz7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-09T22:03:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MkpFD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-09T22:10:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MkvQh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-09T22:29:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MmsOl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-10T04:55:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MnKSP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-10T06:05:31Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q0ojc",
                    "body": "I'm curious if you can drop the `(subset_closure hz)` here; I think it can be found by unification?",
                    "createdAt": "2024-10-08T16:27:56Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q7MS1",
                    "body": "yes, it can.",
                    "createdAt": "2024-10-09T17:27:53Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q0oq0",
                    "body": "```suggestion\r\n    (mul_left : ∀ x hx y hy z hz, p x z hx hz → p y z hy hz → p (x * y) z (mul_mem hx hy) hz)\r\n    (mul_right : ∀ x hx y hy z hz, p z x hz hx → p z y hz hy → p z (x * y) hz (mul_mem hx hy))\r\n```",
                    "createdAt": "2024-10-08T16:28:19Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q7vJ_",
                    "body": "This doesn't look like the standard indentation style to me:\r\n```suggestion\r\n  induction hy using adjoin_induction with\r\n  | mem z hz =>\r\n    induction hx using adjoin_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | smul _ _ _ h => exact smul_left _ _ _ _ _ h\r\n  | zero => exact zero_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | smul _ _ _ h => exact smul_right _ _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T18:55:17Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q7w-S",
                    "body": "Is this the only \"weird\" induction principle? If so, I think an `example` after it showing how to use it would be a good idea.",
                    "createdAt": "2024-10-09T18:57:26Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8ssI",
                    "body": "Should `s` be explicit, do you think? This would allow the user to defer the proof of `closure s = ⊤` into the arms of the induction without creating a metavariable.",
                    "createdAt": "2024-10-09T22:03:38Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8w6l",
                    "body": "What would the `example` look like if this were explicit?",
                    "createdAt": "2024-10-09T22:29:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q-Dib",
                    "body": "`induction x using dense_induction s`",
                    "createdAt": "2024-10-10T04:55:35Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q-T7f",
                    "body": "I've made `s` explicit and added an example.",
                    "createdAt": "2024-10-10T06:05:31Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8s3X",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem _ h _ hz\r\n    | one => exact one_left _ (subset_closure hz)\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | inv _ _ h => exact inv_left _ _ _ (subset_closure hz) h\r\n  | one => exact one_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ hx h₁ h₂\r\n  | inv _ _ h => exact inv_right _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:04:32Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8s8t",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem _ h _ hz\r\n    | one => exact one_left _ (subset_closure hz)\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n  | one => exact one_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ hx h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:05:04Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tB-",
                    "body": "```suggestion\r\n  | mem z hz => induction hy using closure_induction with\r\n    | mem _ h => exact mem _ hz _ h\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ hy h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:05:33Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tOV",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | one => exact one_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | neg _ _ h => exact neg_left _ _ _ _ h\r\n  | zero => exact zero_right x hx\r\n  | one => exact one_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | neg _ _ h => exact neg_right _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:06:21Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tUQ",
                    "body": "```suggestion\r\n      | mem x hx =>\r\n        induction hx using Submonoid.closure_induction with\r\n        | mem _ h => exact subset_closure h\r\n```",
                    "createdAt": "2024-10-09T22:06:56Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8taG",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | one => exact one_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n  | zero => exact zero_right x hx\r\n  | one => exact one_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:07:31Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tfv",
                    "body": "```suggestion\r\n  | mem z hz => induction ha using adjoin_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | algebraMap _ => exact algebraMap_left _ _ hz\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | star _ _ h => exact star_left _ _ _ _ h\r\n  | algebraMap r =>\r\n    induction ha using adjoin_induction with\r\n    | mem _ h => exact algebraMap_right _ _ h\r\n    | algebraMap _ => exact algebraMap_both _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | star _ _ h => exact star_left _ _ _ _ h\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | star _ _ h => exact star_right _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:08:04Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tlW",
                    "body": "```suggestion\r\n  | mem z hz => induction ha using span_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | smul _ _ _ h => exact smul_left _ _ _ _ _ h\r\n  | zero => exact zero_right a ha\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | smul _ _ _ h => exact smul_right _ _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:08:35Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8trh",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using adjoin_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | algebraMap _ => exact algebraMap_left _ _ hz\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n  | algebraMap r =>\r\n    induction hx using adjoin_induction with\r\n    | mem _ h => exact algebraMap_right _ _ h\r\n    | algebraMap _ => exact algebraMap_both _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:09:09Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tyL",
                    "body": "```suggestion\r\n    | mem x hx => exact mem x hx\r\n    | zero => exact zero\r\n    | add x y hx hy h₁ h₂ => exact add _ _ h₁ h₂\r\n    | neg x hx h => exact neg _ h\r\n    | mul x y hx hy h₁ h₂ => exact mul _ _ h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:09:45Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8t1y",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | neg _ _ h => exact neg_left _ _ _ _ h\r\n  | zero => exact zero_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | neg _ _ h => exact neg_right _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:10:08Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8t7P",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n  | zero => exact zero_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:10:39Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7ZkZA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372506/job/31335015524"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7ZkMA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372483/job/31335015472"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7ZjDQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372491/job/31335015181"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RQWQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322943/job/31334879321"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RQZw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322950/job/31334879335"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RMcQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878321"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RNyA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878664"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RRWA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322953/job/31334879576"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7Zivw",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372506/job/31335015103"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RNsw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878643"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7ROcw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878835"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RQpA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322953/job/31334879396"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RMjQ",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878349"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RObQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878829"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RPLw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334879023"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7RqtQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31334886069"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHS7SZEQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor: migrate to dependent induction lemmas",
        "updatedAt": "2024-10-10T06:05:57Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17543",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANjyzku",
              "createdAt": "2024-10-08T15:44:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANjyzk6",
              "createdAt": "2024-10-08T15:44:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
                "name": "tech debt"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PEELS",
              "createdAt": "2024-10-08T15:44:44Z",
              "body": "### PR summary [d8ab2152c5](https://github.com/leanprover-community/mathlib4/pull/17543/commits/d8ab2152c5053485ea9ba0a7b14c68b9a49aaf28)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`++++++------ closure_induction'`\n`+++---++++---- closure_induction₂`\n`+++----+++++---- closure_induction`\n`++-+--+ adjoin_induction`\n`++-- adjoin_induction'`\n`++-- dense_induction`\n`-++--+ adjoin_induction₂`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANjy3uh",
              "createdAt": "2024-10-08T15:45:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MXm7z",
              "createdAt": "2024-10-08T16:27:56Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MXnIU",
              "createdAt": "2024-10-08T16:28:19Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PK5ud",
              "createdAt": "2024-10-09T10:58:08Z",
              "body": "It's great that we add these dependent induction lemmas, but I think it's sometimes nice to also have access to the non-dependent ones, since they're sometimes easier to work with. For example, when it's necessary to specify the motive to a dependent induction in the case where the application is not dependent, you often end up with things looking syntactically really confusing. I'd personally slightly prefer keeping the old ones around, under other names. But if it turns out that adjusting mathlib to your change is easy enough, then it's probably fine...",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PLwxK",
              "createdAt": "2024-10-09T12:46:14Z",
              "body": "You should never have to specify the motive explicitly though? Usually when you do, this is because:\r\n* The induction principle was not dependent, and should have been\r\n* The induction principle has the arguments in the wrong order\r\n* `elab_as_elim` is missing from the theorem\r\n* You tried to use `apply` with an `elab_as_elim`",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PMbsa",
              "createdAt": "2024-10-09T13:47:32Z",
              "body": "> You should never have to specify the motive explicitly though? \r\n\r\nNote that the current state of this PR has exactly one adaptation going from the non-dependent to the dependent one, in `dense_induction`. And the motive is specified explicitly here, in a non-dependent way: exactly the situation I'm worried about. \r\nIt's possible that this is an isolated example, but I just want to flag it because it does get annoying in practice.\r\n",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6POk2p",
              "createdAt": "2024-10-09T18:05:33Z",
              "body": "@b-mehta I *think* that `refine` can get confused, but that's primarily because `dense_induction` is weird in that the term on which we are doing induction (namely `x`) doesn't reference `s` in it's type, so it's a bit underdetermined. Nevertheless, I think Eric is right, so long as you actually use the `induction` tactic. For instance, this works for `Subsemigroup.dense_induction`.\r\n```lean\r\ntheorem dense_induction {p : M → Prop} {s : Set M} (hs : closure s = ⊤)\r\n    (mem : ∀ x ∈ s, p x)\r\n    (mul : ∀ x y, p x → p y → p (x * y))\r\n    (x : M) : p x := by\r\n  induction hs.symm ▸ mem_top x using closure_induction with\r\n  | mem x hx => exact mem x hx\r\n  | mul x _ y _ hpx hpy => exact mul x y hpx hpy\r\n```\r\n\r\nOverall, while it was a lot of work to go through changing things, it wasn't terrible. This `dense_induction` issue hardly ever came up (at least in terms of *new* places where I needed to specify the motive). You're welcome to have a look and let me know what you think.\r\n",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ZZbWwzwAAAANk33D1",
              "createdAt": "2024-10-09T18:14:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PPLQc",
              "createdAt": "2024-10-09T18:54:08Z",
              "body": "I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MjE8n",
              "createdAt": "2024-10-09T18:55:16Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MjHyM",
              "createdAt": "2024-10-09T18:57:26Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PQo3-",
              "createdAt": "2024-10-09T21:58:53Z",
              "body": "> I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.\r\n\r\nI considered that, but I think it might be really confusing if we *only* swap the names on some of them.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MkpFD",
              "createdAt": "2024-10-09T22:04:32Z",
              "body": "",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PQw7C",
              "createdAt": "2024-10-09T22:28:34Z",
              "body": "> > I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.\r\n> \r\n> I considered that, but I think it might be really confusing if we _only_ swap the names on some of them.\r\n\r\nI'm not suggesting we swap the names, but that both the primed and unprimed versions refer to the dependent ones. That way people don't have to guess to work out that they just need to remove the `'`.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PS9uR",
              "createdAt": "2024-10-10T06:05:56Z",
              "body": "> I'm not suggesting we swap the names, but that both the primed and unprimed versions refer to the dependent ones. That way people don't have to guess to work out that they just need to remove the `'`\r\n\r\nDone",
              "author": {
                "login": "j-loreaux"
              }
            }
          ]
        }
      }
    }
  }
}
