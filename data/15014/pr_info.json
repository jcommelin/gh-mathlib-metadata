{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 249,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "author": {
          "login": "judithludwig"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Add definition of faithfully flat ring maps and show basic properties.\r\nCo-authored-by: Florent Schaffhauser (github: matematiflo)\r\n\r\nThis contribution was created as part of the AIM workshop \"Formalizing algebraic geometry\" in\r\nJune 2024.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6FsSZL",
              "body": "### PR summary [34e049ca1b](https://github.com/leanprover-community/mathlib4/pull/15014/commits/34e049ca1bcc219629716c0bfb038ac895114ac8)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.RingTheory.Flat.FaithfullyFlat`|1427|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ FaithfullyFlat`\n`+ comp`\n`+ lTensor_zero_iff_rTensor_zero`\n`+ of_linearEquiv`\n`+ self`\n`+ tensorproduct_non_zero`\n`+ zero_iff_lTensor_zero`\n`+ zero_iff_lTensor_zero'`\n`+ zero_iff_rTensor_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\n</details>",
              "createdAt": "2024-07-22T13:35:03Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6F8AFr",
              "body": "There is the following alternative definition of faithfully flat ring map and there should probably be a discussion about which one should become the ```mathlib``` definition: \r\n```\r\nvariable (R : Type u) (M : Type v) [CommRing R] [AddCommGroup M] [Module R M]\r\n\r\n@[mk_iff] class FaithfullyFlat' : Prop where\r\n  flat : Module.Flat R M := by infer_instance\r\n   submodule_ne_top :  ∀ ⦃m : Ideal R⦄ (_ : Ideal.IsMaximal m), m • (⊤ : Submodule R M) ≠ ⊤ \r\n```\r\nThis would avoid universe issues. ",
              "createdAt": "2024-07-24T07:27:15Z",
              "author": {
                "login": "judithludwig"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GA9Sh",
              "body": "> There is the following alternative definition of faithfully flat ring map and there should probably be a discussion about which one should become the `mathlib` definition:\r\n> \r\n> ```\r\n> variable (R : Type u) (M : Type v) [CommRing R] [AddCommGroup M] [Module R M]\r\n> \r\n> @[mk_iff] class FaithfullyFlat' : Prop where\r\n>   flat : Module.Flat R M := by infer_instance\r\n>    submodule_ne_top :  ∀ ⦃m : Ideal R⦄ (_ : Ideal.IsMaximal m), m • (⊤ : Submodule R M) ≠ ⊤ \r\n> ```\r\n> \r\n> This would avoid universe issues.\r\n\r\nI think this second version is better. I understand that it is probably not easy to show the equivalence, but putting in mathlib a definition that we know we are going to change is a recipe to make people suffering (someone will start using your definition, and the refactor will be more and more painful).\r\n\r\nCan you start adding the basic API to show equivalence? (Or anything else you need!). Thanks!",
              "createdAt": "2024-07-24T16:07:05Z",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GCZOs",
              "body": "> I think this second version is better. I understand that it is probably not easy to show the equivalence, but putting in mathlib a definition that we know we are going to change is a recipe to make people suffering (someone will start using your definition, and the refactor will be more and more painful).\r\n> \r\n> Can you start adding the basic API to show equivalence? (Or anything else you need!). Thanks!\r\n\r\nI'll label this PR as work in progress for now until we sort this out. Thanks for your input. ",
              "createdAt": "2024-07-24T19:44:28Z",
              "author": {
                "login": "judithludwig"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "34e049ca1bcc219629716c0bfb038ac895114ac8",
                "additions": 249,
                "deletions": 0,
                "committedDate": "2024-07-22T13:11:34Z",
                "author": {
                  "name": "judithludwig",
                  "email": "judith.ludwig@iwr.uni-heidelberg.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdhbBgA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041892420/job/27751006592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdhbBbg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041892422/job/27751006574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgPz0Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749774289"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgP2SA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27749774920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdhbCuQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041892423/job/27751006905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgP3Ow",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749775163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgPzSA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27749774152"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdhbBjA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041892423/job/27751006604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgP1qA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749774760"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgP07Q",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27749774573"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgPx0g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749773778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgPxug",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27749773754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgP4gw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749775491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdgx_Og",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27750334266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdhbXsw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27751012275"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdhcvLQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15014&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-22T13:34:25Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Flat/FaithfullyFlat.lean",
              "additions": 248,
              "deletions": 0
            }
          ]
        },
        "headRefName": "jlfsfaithfullyflat",
        "headRefOid": "34e049ca1bcc219629716c0bfb038ac895114ac8",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c52F7yr",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABqYl4dA",
              "name": "workshop-AIM-AG-2024"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15014,
        "potentialMergeCommit": {
          "oid": "ff5276be12b47f62559edf2e38e8909bacad1ac6"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM2NDE0Mjcw",
                "login": "erdOne"
              }
            }
          ]
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOCPF4iw",
              "login": "judithludwig"
            },
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdhbBgA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041892420/job/27751006592"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdhbBbg",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041892422/job/27751006574"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgPz0Q",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749774289"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgP2SA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27749774920"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdhbCuQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041892423/job/27751006905"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgP3Ow",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749775163"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgPzSA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27749774152"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdhbBjA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041892423/job/27751006604"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgP1qA",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749774760"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgP07Q",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27749774573"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgPx0g",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749773778"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgPxug",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27749773754"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgP4gw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517387/job/27749775491"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdgx_Og",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10041517368/job/27750334266"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdhbXsw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27751012275"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGdhcvLQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15014&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(RingTheory/Flat): faithfully flat ring maps",
        "updatedAt": "2024-08-28T18:57:44Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15014",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QaoJjzwAAAAMqtcCr",
              "createdAt": "2024-07-22T13:34:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QaoJjzwAAAAMqtcCx",
              "createdAt": "2024-07-22T13:34:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABqYl4dA",
                "name": "workshop-AIM-AG-2024"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6QaoJjzwAAAAMqtcC7",
              "createdAt": "2024-07-22T13:34:25Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM2NDE0Mjcw",
                "login": "erdOne"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FsSZL",
              "createdAt": "2024-07-22T13:35:03Z",
              "body": "### PR summary [34e049ca1b](https://github.com/leanprover-community/mathlib4/pull/15014/commits/34e049ca1bcc219629716c0bfb038ac895114ac8)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.RingTheory.Flat.FaithfullyFlat`|1427|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ FaithfullyFlat`\n`+ comp`\n`+ lTensor_zero_iff_rTensor_zero`\n`+ of_linearEquiv`\n`+ self`\n`+ tensorproduct_non_zero`\n`+ zero_iff_lTensor_zero`\n`+ zero_iff_lTensor_zero'`\n`+ zero_iff_rTensor_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6F8AFr",
              "createdAt": "2024-07-24T07:27:15Z",
              "body": "There is the following alternative definition of faithfully flat ring map and there should probably be a discussion about which one should become the ```mathlib``` definition: \r\n```\r\nvariable (R : Type u) (M : Type v) [CommRing R] [AddCommGroup M] [Module R M]\r\n\r\n@[mk_iff] class FaithfullyFlat' : Prop where\r\n  flat : Module.Flat R M := by infer_instance\r\n   submodule_ne_top :  ∀ ⦃m : Ideal R⦄ (_ : Ideal.IsMaximal m), m • (⊤ : Submodule R M) ≠ ⊤ \r\n```\r\nThis would avoid universe issues. ",
              "author": {
                "login": "judithludwig"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GA9Sh",
              "createdAt": "2024-07-24T16:07:05Z",
              "body": "> There is the following alternative definition of faithfully flat ring map and there should probably be a discussion about which one should become the `mathlib` definition:\r\n> \r\n> ```\r\n> variable (R : Type u) (M : Type v) [CommRing R] [AddCommGroup M] [Module R M]\r\n> \r\n> @[mk_iff] class FaithfullyFlat' : Prop where\r\n>   flat : Module.Flat R M := by infer_instance\r\n>    submodule_ne_top :  ∀ ⦃m : Ideal R⦄ (_ : Ideal.IsMaximal m), m • (⊤ : Submodule R M) ≠ ⊤ \r\n> ```\r\n> \r\n> This would avoid universe issues.\r\n\r\nI think this second version is better. I understand that it is probably not easy to show the equivalence, but putting in mathlib a definition that we know we are going to change is a recipe to make people suffering (someone will start using your definition, and the refactor will be more and more painful).\r\n\r\nCan you start adding the basic API to show equivalence? (Or anything else you need!). Thanks!",
              "author": {
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QaoJjzwAAAAMsl6cK",
              "createdAt": "2024-07-24T16:07:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6QaoJjzwAAAAMsl9MD",
              "createdAt": "2024-07-24T16:08:20Z",
              "assignee": {
                "id": "MDQ6VXNlcjMyNDkwNTMy",
                "login": "riccardobrasca"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GCZOs",
              "createdAt": "2024-07-24T19:44:28Z",
              "body": "> I think this second version is better. I understand that it is probably not easy to show the equivalence, but putting in mathlib a definition that we know we are going to change is a recipe to make people suffering (someone will start using your definition, and the refactor will be more and more painful).\r\n> \r\n> Can you start adding the basic API to show equivalence? (Or anything else you need!). Thanks!\r\n\r\nI'll label this PR as work in progress for now until we sort this out. Thanks for your input. ",
              "author": {
                "login": "judithludwig"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6QaoJjzwAAAAMsvwgk",
              "createdAt": "2024-07-24T19:44:51Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            }
          ]
        }
      }
    }
  }
}
