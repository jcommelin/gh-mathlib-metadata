{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 309,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Prove Pontryagin duality in case of finite abelian groups.\r\n\r\nThis states that any finite abelian group is canonically isomorphic to its double dual (the space of complex-valued characters of its space of complex-valued characters).\r\n\r\nWe first prove it for `ZMod n` and then extend to all finite abelian groups using the Structure Theorem.\r\n\r\nFrom LeanAPAP\r\n\r\nCo-authored-by Bhavik Mehta <bhavikmehta8@gmail.com>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #15441\r\n- [x] depends on: #16447\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6JBLCm",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #15441. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "createdAt": "2024-08-20T12:51:35Z",
              "author": {
                "login": "mergify"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JBLH1",
              "body": "### PR summary [420cef5ba9](https://github.com/leanprover-community/mathlib4/pull/15999/commits/420cef5ba96f1d91868e17a43e96184f84a69893)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.Fourier.FiniteAbelian.Orthogonality`|1653|\n| `Mathlib.Analysis.Fourier.FiniteAbelian.PontryaginDuality`|1928|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ card_addChar_le`\n`+ card_eq`\n`+ circleEquivComplex`\n`+ coe_complexBasis`\n`+ coe_doubleDualEquiv`\n`+ complexBasis`\n`+ complexBasis_apply`\n`+ doubleDualEmb_bijective`\n`+ doubleDualEmb_doubleDualEquiv_symm_apply`\n`+ doubleDualEmb_eq_zero`\n`+ doubleDualEmb_inj`\n`+ doubleDualEmb_injective`\n`+ doubleDualEmb_ne_zero`\n`+ doubleDualEquiv`\n`+ doubleDualEquiv_symm_doubleDualEmb_apply`\n`+ exists_apply_ne_zero`\n`+ exp_inj`\n`+ expect_apply_eq_ite`\n`+ expect_apply_eq_zero_iff_ne_zero`\n`+ expect_apply_ne_zero_iff_eq_zero`\n`+ expect_eq_ite`\n`+ expect_eq_zero_iff_ne_zero`\n`+ expect_ne_zero_iff_eq_zero`\n`+ forall_apply_eq_zero`\n`+ instFintype`\n`+ linearIndependent`\n`+ mul_modEq_mul_left`\n`+ mul_modEq_mul_right`\n`+ sum_apply_eq_ite`\n`+ sum_apply_eq_zero_iff_ne_zero`\n`+ sum_apply_ne_zero_iff_eq_zero`\n`+ wInner_cWeight_eq_boole`\n`+ wInner_cWeight_eq_one_iff_eq`\n`+ wInner_cWeight_eq_zero_iff_ne`\n`+ wInner_cWeight_self`\n`+ zmod`\n`+ zmodAddEquiv`\n`+ zmodAddEquiv_apply`\n`+ zmodHom`\n`+ zmod_add`\n`+ zmod_inj`\n`+ zmod_injective`\n`+ zmod_intCast`\n`+ zmod_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-20T12:51:46Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pf1V2",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#15441~~\n* ~~leanprover-community/mathlib4#16447~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-11T14:03:55Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "b877586bd044c04a766828d9e8275e659e9ba8d5",
                "additions": 270,
                "deletions": 2,
                "committedDate": "2024-10-13T09:00:13Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fe222a4ac109cbe5cdee9819d7c7c24e04741a7e",
                "additions": 93,
                "deletions": 1,
                "committedDate": "2024-10-13T09:00:13Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "420cef5ba96f1d91868e17a43e96184f84a69893",
                "additions": 55,
                "deletions": 109,
                "committedDate": "2024-10-13T09:00:14Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0gYA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032693/job/31461285984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0gNA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032697/job/31461285940"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0d-w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032416/job/31461285371"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0e_w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032411/job/31461285631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0gMw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032691/job/31461285939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0edw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032416/job/31461285495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0eYQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032411/job/31461285473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0glA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032691/job/31461286036"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0e9w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032416/job/31461285623"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0d5A",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032411/job/31461285348"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz0f0Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032416/job/31461285841"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHU0JB_g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032411/job/31461622270"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz08cQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31461293169"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHUz1FZg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15999&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-20T12:50:59Z",
        "deletions": 3,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/ModEq.lean",
              "additions": 11,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Fourier/AddCircle.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Fourier/FiniteAbelian/Orthogonality.lean",
              "additions": 91,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Fourier/FiniteAbelian/PontryaginDuality.lean",
              "additions": 201,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Complex/Circle.lean",
              "additions": 4,
              "deletions": 1
            }
          ]
        },
        "headRefName": "pontryagin_duality_finite_abelian",
        "headRefOid": "420cef5ba96f1d91868e17a43e96184f84a69893",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c542pEN",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6IPkmh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-06T10:04:39Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15999,
        "potentialMergeCommit": {
          "oid": "16423acf027f4a90a23cfc76bd710507ac959101"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6IPjq0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-06T10:03:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6IPkmh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-06T10:04:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M2ThV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-11T15:13:24Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5oHyee",
                    "body": "We should relate this def to the ones below, eg toCircle. I think that one is a composition of this and the (not really) canonical map from ZMod N to R given by x -> x/N",
                    "createdAt": "2024-09-06T10:03:29Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5oHyzO",
                    "body": "Is it any better to write this in terms of `toCircle`? It's a group hom in ZMod n composed with that; maybe this also saves some of the lemmas above",
                    "createdAt": "2024-09-06T10:04:39Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rHZFc",
                    "body": "It is better!",
                    "createdAt": "2024-10-11T15:13:24Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0gYA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032693/job/31461285984"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0gNA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032697/job/31461285940"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0d-w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032416/job/31461285371"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0e_w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032411/job/31461285631"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0gMw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032691/job/31461285939"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0edw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032416/job/31461285495"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0eYQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032411/job/31461285473"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0glA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032691/job/31461286036"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0e9w",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032416/job/31461285623"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0d5A",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032411/job/31461285348"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz0f0Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032416/job/31461285841"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHU0JB_g",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11313032411/job/31461622270"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz08cQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31461293169"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHUz1FZg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15999&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: Pontryagin duality for finite abelian groups",
        "updatedAt": "2024-10-13T09:01:04Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15999",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAAM_Ke9y",
              "createdAt": "2024-08-20T12:50:59Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAAM_Ke94",
              "createdAt": "2024-08-20T12:50:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JBLCm",
              "createdAt": "2024-08-20T12:51:35Z",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #15441. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "author": {
                "login": "mergify"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JBLH1",
              "createdAt": "2024-08-20T12:51:46Z",
              "body": "### PR summary [420cef5ba9](https://github.com/leanprover-community/mathlib4/pull/15999/commits/420cef5ba96f1d91868e17a43e96184f84a69893)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.Fourier.FiniteAbelian.Orthogonality`|1653|\n| `Mathlib.Analysis.Fourier.FiniteAbelian.PontryaginDuality`|1928|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ card_addChar_le`\n`+ card_eq`\n`+ circleEquivComplex`\n`+ coe_complexBasis`\n`+ coe_doubleDualEquiv`\n`+ complexBasis`\n`+ complexBasis_apply`\n`+ doubleDualEmb_bijective`\n`+ doubleDualEmb_doubleDualEquiv_symm_apply`\n`+ doubleDualEmb_eq_zero`\n`+ doubleDualEmb_inj`\n`+ doubleDualEmb_injective`\n`+ doubleDualEmb_ne_zero`\n`+ doubleDualEquiv`\n`+ doubleDualEquiv_symm_doubleDualEmb_apply`\n`+ exists_apply_ne_zero`\n`+ exp_inj`\n`+ expect_apply_eq_ite`\n`+ expect_apply_eq_zero_iff_ne_zero`\n`+ expect_apply_ne_zero_iff_eq_zero`\n`+ expect_eq_ite`\n`+ expect_eq_zero_iff_ne_zero`\n`+ expect_ne_zero_iff_eq_zero`\n`+ forall_apply_eq_zero`\n`+ instFintype`\n`+ linearIndependent`\n`+ mul_modEq_mul_left`\n`+ mul_modEq_mul_right`\n`+ sum_apply_eq_ite`\n`+ sum_apply_eq_zero_iff_ne_zero`\n`+ sum_apply_ne_zero_iff_eq_zero`\n`+ wInner_cWeight_eq_boole`\n`+ wInner_cWeight_eq_one_iff_eq`\n`+ wInner_cWeight_eq_zero_iff_ne`\n`+ wInner_cWeight_self`\n`+ zmod`\n`+ zmodAddEquiv`\n`+ zmodAddEquiv_apply`\n`+ zmodHom`\n`+ zmod_add`\n`+ zmod_inj`\n`+ zmod_injective`\n`+ zmod_intCast`\n`+ zmod_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6TjjdLzwAAAANJDfhp",
              "createdAt": "2024-09-03T07:32:18Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAANJEtU1",
              "createdAt": "2024-09-03T07:57:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6TjjdLzwAAAANJE9SV",
              "createdAt": "2024-09-03T08:01:59Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6TjjdLzwAAAANJFRoA",
              "createdAt": "2024-09-03T08:08:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAANJQSfh",
              "createdAt": "2024-09-03T11:47:09Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6IPjq0",
              "createdAt": "2024-09-06T10:03:28Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6IPkmh",
              "createdAt": "2024-09-06T10:04:39Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6TjjdLzwAAAANmyOpq",
              "createdAt": "2024-10-11T14:03:53Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CommentDeletedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pf1V2",
              "createdAt": "2024-10-11T14:03:55Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#15441~~\n* ~~leanprover-community/mathlib4#16447~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6TjjdLzwAAAANm36Kn",
              "createdAt": "2024-10-11T15:13:21Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6TjjdLzwAAAANnXYnK",
              "createdAt": "2024-10-13T09:00:21Z"
            }
          ]
        }
      }
    }
  }
}
