{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 411,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "`Function.Embedding` is a type while `Embedding` is a proposition, and there are many other kinds of embeddings than topological embeddings. Hence this PR is a step towards\n1. renaming `Embedding` to `IsEmbedding` and similarly for neighborhing declarations (which `UniformInducing` is)\n2. namespacing it inside `Topology`\n\n[Zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/rename.20.60Inducing.60.20and.20.60Embedding.60.3F). See #15993 for context.\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> Mathlib.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 51,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6OohBS",
              "body": "### PR summary [e62b52175a](https://github.com/leanprover-community/mathlib4/pull/17398/commits/e62b52175a2e0d0fa4802bb451372d855d91fdaa)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Equicontinuous.isUniformInducing_uniformFun_iff_pi`\n`+ EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi`\n`+ EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'`\n`+ Equiv.toUniformEquivOfIsUniformInducing`\n`+ Filter.HasBasis.isUniformInducing_iff`\n`+ IsUniformEmbedding.isUniformInducing`\n`+ IsUniformInducing`\n`+ IsUniformInducing.basis_uniformity`\n`+ IsUniformInducing.cauchy_map_iff`\n`+ IsUniformInducing.comapPseudoMetricSpace`\n`+ IsUniformInducing.comp`\n`+ IsUniformInducing.completableTopField`\n`+ IsUniformInducing.completeSpace`\n`+ IsUniformInducing.completeSpace_congr`\n`+ IsUniformInducing.equicontinuousAt_iff`\n`+ IsUniformInducing.equicontinuousOn_iff`\n`+ IsUniformInducing.equicontinuousWithinAt_iff`\n`+ IsUniformInducing.equicontinuous_iff`\n`+ IsUniformInducing.id`\n`+ IsUniformInducing.inducing`\n`+ IsUniformInducing.injective`\n`+ IsUniformInducing.isComplete_iff`\n`+ IsUniformInducing.isComplete_range`\n`+ IsUniformInducing.isDenseInducing`\n`+ IsUniformInducing.isUniformEmbedding`\n`+ IsUniformInducing.isUniformInducing_comp_iff`\n`+ IsUniformInducing.mk'`\n`+ IsUniformInducing.of_comp`\n`+ IsUniformInducing.of_comp_iff`\n`+ IsUniformInducing.prod`\n`+ IsUniformInducing.uniformContinuous`\n`+ IsUniformInducing.uniformContinuousConstSMul`\n`+ IsUniformInducing.uniformContinuousOn_iff`\n`+ IsUniformInducing.uniformContinuous_iff`\n`+ IsUniformInducing.uniformEmbedding`\n`+ IsUniformInducing.uniformEquicontinuousOn_iff`\n`+ IsUniformInducing.uniformEquicontinuous_iff`\n`+ IsUniformInducing.uniformGroup`\n`+ SeparationQuotient.isUniformInducing_mk`\n`+ closure_image_mem_nhds_of_isUniformInducing`\n`+ holds`\n`+ isUniformEmbedding_iff_isUniformInducing`\n`+ isUniformInducing_coe`\n`+ isUniformInducing_comp`\n`+ isUniformInducing_equivBoundedOfCompact`\n`+ isUniformInducing_iff'`\n`+ isUniformInducing_iff_uniformSpace`\n`+ isUniformInducing_pureCauchy`\n`+ isUniformInducing_toContinuousMap`\n`+ outCLM_isUniformInducing`\n`+ uniformEmbedding_iff_isUniformInducing`\n`+ ⟨IsUniformInducing.comap_uniformSpace,`\n`++ isUniformInducing_iff`\n`++ postcomp_isUniformInducing`\n`+++++ isUniformInducing`\n`+++++----- uniformInducing`\n`++-- postcomp_uniformInducing`\n`++-- uniformInducing_iff`\n`- Equiv.toUniformEquivOfUniformInducing`\n`- UniformInducing`\n`- UniformInducing.comapPseudoMetricSpace`\n`- UniformInducing.completableTopField`\n`- UniformInducing.completeSpace`\n`- UniformInducing.uniformEmbedding`\n`- uniformEmbedding_iff_uniformInducing`\n`- ⟨UniformInducing.comap_uniformSpace,`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-10-04T07:13:13Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c8245d21b0fb2659bf05fa40d059dc905d351360",
                "additions": 255,
                "deletions": 249,
                "committedDate": "2024-10-05T20:43:40Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5WCQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200232/job/31124772361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5WPw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200231/job/31124772415"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5VRQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200047/job/31124772165"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5VYg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200049/job/31124772194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5WBg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200223/job/31124772358"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5WZQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200047/job/31124772453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5V1w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200049/job/31124772311"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5WeA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200223/job/31124772472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5U-A",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200049/job/31124772088"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5V3A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200047/job/31124772316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJaVg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200049/job/31125035606"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5W8A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196200047/job/31124772592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5iAA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31124775424"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPy5sBw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17398&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "55f8b3ba54921ac7a7061813f39e0eb33c0636c3",
                "additions": 172,
                "deletions": 13,
                "committedDate": "2024-10-05T21:07:51Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJNUw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196320051/job/31125032275"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJNNQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196320049/job/31125032245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJMMA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196319896/job/31125031984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJMLw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196319897/job/31125031983"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJNhw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196320050/job/31125032327"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJNAQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196319896/job/31125032193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJMlQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196319897/job/31125032085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJNFA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196320050/job/31125032212"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJM7A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196319897/job/31125032172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJMnw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196319896/job/31125032095"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJNiA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196319896/job/31125032328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzmEDg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11196319897/job/31125505038"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJbhQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31125035909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPzJmew",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17398&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e62b52175a2e0d0fa4802bb451372d855d91fdaa",
                "additions": 0,
                "deletions": 3,
                "committedDate": "2024-10-06T06:48:37Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O3aw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199746096/job/31132465003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O3jQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199746093/job/31132465037"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O20Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745880/job/31132464849"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O2VA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745883/job/31132464724"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O3wQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199746083/job/31132465089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O3Jg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745880/job/31132464934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O3DA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745883/job/31132464908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O3Vw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199746083/job/31132464983"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O2tA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745883/job/31132464820"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O2Vg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745880/job/31132464726"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6O3sg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745880/job/31132465074"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6rDxg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745883/job/31132926918"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6PIeg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31132469370"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHP6PSXg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17398&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-10-04T07:12:32Z",
        "deletions": 249,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/NonUnital.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Module/Synonym.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Multiplier.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/LinearPMap.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/l2Space.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Unitization.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Lp/PiLp.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Lp/ProdLp.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/LinearIsometry.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/OperatorNorm/Completeness.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/ODE/PicardLindelof.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Function/SimpleFuncDenseLp.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Bochner.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetToL1.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Alternating/Topology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Multilinear/Topology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/StrongTopology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/SeparationQuotient.lean",
              "additions": 8,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformField.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformGroup.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformMulAction.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformRing.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Bounded.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Compact.lean",
              "additions": 7,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/ContinuousMapZero.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/ZeroAtInfty.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/EMetricSpace/Basic.lean",
              "additions": 12,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/Instances/Complex.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Instances/Rat.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Antilipschitz.lean",
              "additions": 7,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Bilipschitz.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Closeds.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Dilation.lean",
              "additions": 8,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Gluing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Isometry.lean",
              "additions": 9,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Polish.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Pseudo/Basic.lean",
              "additions": 7,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Pseudo/Constructions.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/UniformSpace/AbstractCompletion.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/UniformSpace/Ascoli.lean",
              "additions": 28,
              "deletions": 19
            },
            {
              "path": "Mathlib/Topology/UniformSpace/CompactConvergence.lean",
              "additions": 9,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/UniformSpace/CompareReals.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/UniformSpace/CompleteSeparated.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/UniformSpace/Completion.lean",
              "additions": 17,
              "deletions": 11
            },
            {
              "path": "Mathlib/Topology/UniformSpace/Equicontinuity.lean",
              "additions": 33,
              "deletions": 15
            },
            {
              "path": "Mathlib/Topology/UniformSpace/Equiv.lean",
              "additions": 13,
              "deletions": 10
            },
            {
              "path": "Mathlib/Topology/UniformSpace/Pi.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/UniformSpace/UniformConvergenceTopology.lean",
              "additions": 20,
              "deletions": 15
            },
            {
              "path": "Mathlib/Topology/UniformSpace/UniformEmbedding.lean",
              "additions": 157,
              "deletions": 77
            },
            {
              "path": "scripts/no_lints_prime_decls.txt",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "rename_uniform_inducing",
        "headRefOid": "e62b52175a2e0d0fa4802bb451372d855d91fdaa",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c59lVXO",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17398,
        "potentialMergeCommit": {
          "oid": "85e1b61293c3396d5f036642848044787e20f2f6"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O3aw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199746096/job/31132465003"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O3jQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199746093/job/31132465037"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O20Q",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745880/job/31132464849"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O2VA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745883/job/31132464724"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O3wQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199746083/job/31132465089"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O3Jg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745880/job/31132464934"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O3DA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745883/job/31132464908"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O3Vw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199746083/job/31132464983"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O2tA",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745883/job/31132464820"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O2Vg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745880/job/31132464726"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6O3sg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745880/job/31132465074"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6rDxg",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11199745883/job/31132926918"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6PIeg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31132469370"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHP6PSXg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17398&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore: Rename `UniformInducing` to `IsUniformInducing`",
        "updatedAt": "2024-10-06T06:49:24Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17398",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OohBS",
              "createdAt": "2024-10-04T07:13:13Z",
              "body": "### PR summary [e62b52175a](https://github.com/leanprover-community/mathlib4/pull/17398/commits/e62b52175a2e0d0fa4802bb451372d855d91fdaa)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Equicontinuous.isUniformInducing_uniformFun_iff_pi`\n`+ EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi`\n`+ EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'`\n`+ Equiv.toUniformEquivOfIsUniformInducing`\n`+ Filter.HasBasis.isUniformInducing_iff`\n`+ IsUniformEmbedding.isUniformInducing`\n`+ IsUniformInducing`\n`+ IsUniformInducing.basis_uniformity`\n`+ IsUniformInducing.cauchy_map_iff`\n`+ IsUniformInducing.comapPseudoMetricSpace`\n`+ IsUniformInducing.comp`\n`+ IsUniformInducing.completableTopField`\n`+ IsUniformInducing.completeSpace`\n`+ IsUniformInducing.completeSpace_congr`\n`+ IsUniformInducing.equicontinuousAt_iff`\n`+ IsUniformInducing.equicontinuousOn_iff`\n`+ IsUniformInducing.equicontinuousWithinAt_iff`\n`+ IsUniformInducing.equicontinuous_iff`\n`+ IsUniformInducing.id`\n`+ IsUniformInducing.inducing`\n`+ IsUniformInducing.injective`\n`+ IsUniformInducing.isComplete_iff`\n`+ IsUniformInducing.isComplete_range`\n`+ IsUniformInducing.isDenseInducing`\n`+ IsUniformInducing.isUniformEmbedding`\n`+ IsUniformInducing.isUniformInducing_comp_iff`\n`+ IsUniformInducing.mk'`\n`+ IsUniformInducing.of_comp`\n`+ IsUniformInducing.of_comp_iff`\n`+ IsUniformInducing.prod`\n`+ IsUniformInducing.uniformContinuous`\n`+ IsUniformInducing.uniformContinuousConstSMul`\n`+ IsUniformInducing.uniformContinuousOn_iff`\n`+ IsUniformInducing.uniformContinuous_iff`\n`+ IsUniformInducing.uniformEmbedding`\n`+ IsUniformInducing.uniformEquicontinuousOn_iff`\n`+ IsUniformInducing.uniformEquicontinuous_iff`\n`+ IsUniformInducing.uniformGroup`\n`+ SeparationQuotient.isUniformInducing_mk`\n`+ closure_image_mem_nhds_of_isUniformInducing`\n`+ holds`\n`+ isUniformEmbedding_iff_isUniformInducing`\n`+ isUniformInducing_coe`\n`+ isUniformInducing_comp`\n`+ isUniformInducing_equivBoundedOfCompact`\n`+ isUniformInducing_iff'`\n`+ isUniformInducing_iff_uniformSpace`\n`+ isUniformInducing_pureCauchy`\n`+ isUniformInducing_toContinuousMap`\n`+ outCLM_isUniformInducing`\n`+ uniformEmbedding_iff_isUniformInducing`\n`+ ⟨IsUniformInducing.comap_uniformSpace,`\n`++ isUniformInducing_iff`\n`++ postcomp_isUniformInducing`\n`+++++ isUniformInducing`\n`+++++----- uniformInducing`\n`++-- postcomp_uniformInducing`\n`++-- uniformInducing_iff`\n`- Equiv.toUniformEquivOfUniformInducing`\n`- UniformInducing`\n`- UniformInducing.comapPseudoMetricSpace`\n`- UniformInducing.completableTopField`\n`- UniformInducing.completeSpace`\n`- UniformInducing.uniformEmbedding`\n`- uniformEmbedding_iff_uniformInducing`\n`- ⟨UniformInducing.comap_uniformSpace,`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Y7GaIzwAAAANhIPe0",
              "createdAt": "2024-10-04T07:13:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6Y7GaIzwAAAANhIPe7",
              "createdAt": "2024-10-04T07:13:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5a0pmz",
              "createdAt": "2024-10-04T11:30:08Z",
              "source": {
                "id": "PR_kwDOFcwZ1c540qc3",
                "title": "chore(Topology): Namespace `Inducing`, `Embedding`...",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15993"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6Y7GaIzwAAAANhdf5l",
              "createdAt": "2024-10-04T14:17:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6Y7GaIzwAAAANh_oHB",
              "createdAt": "2024-10-05T20:46:08Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            }
          ]
        }
      }
    }
  }
}
