{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1466,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "digama0"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The construction of the adjunction between `nerve` and `SSet.hoFunctor`. As a consequence, we can conclude that `Cat.{u,u}` has colimits.\r\n\r\nCo-Authored-By: Emily Riehl <eriehl@jhu.edu> and Pietro Monticone <38562595+pitmonticone@users.noreply.github.com>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n- [x] depends on: #16779\r\n- [x] depends on: #16780\r\n- [x] depends on: #16781\r\n- [ ] depends on: #16782\r\n- [ ] depends on: #16783\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6MFJZ1",
              "body": "### PR summary [0a0d5f1ef5](https://github.com/leanprover-community/mathlib4/pull/16784/commits/0a0d5f1ef53e8b718a31c9b7827490b54781d58b)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +89.98% | `Mathlib.CategoryTheory.Category.Cat.Limit` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Category.Cat.Limit | 429 | 815 | +386 (+89.98%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Category.Cat.Limit`|386|\n| `Mathlib.AlgebraicTopology.HomotopyCat`|809|\n| `Mathlib.AlgebraicTopology.NerveAdjunction`|810|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CompClosure.congruence`\n`+ SSet.HoRel`\n`+ SSet.HoRel.ext_triangle`\n`+ SSet.HoRelâ‚‚`\n`+ SSet.HoRelâ‚‚.ext_triangle`\n`+ SSet.OneTruncation`\n`+ SSet.OneTruncation.Hom`\n`+ SSet.OneTruncation.ofNerve`\n`+ SSet.OneTruncation.ofNerve.hom`\n`+ SSet.OneTruncation.ofNerve.inv`\n`+ SSet.OneTruncation.ofNerve.map`\n`+ SSet.OneTruncation.ofNerve.natIso`\n`+ SSet.OneTruncation.src`\n`+ SSet.OneTruncation.tgt`\n`+ SSet.OneTruncationâ‚‚`\n`+ SSet.OneTruncationâ‚‚.Hom`\n`+ SSet.OneTruncationâ‚‚.ofTwoTruncationIso`\n`+ SSet.OneTruncationâ‚‚.src`\n`+ SSet.OneTruncationâ‚‚.tgt`\n`+ SSet.hoCat`\n`+ SSet.hoFunctor`\n`+ SSet.hoFunctor'`\n`+ SSet.hoFunctorMap`\n`+ SSet.hoFunctorâ‚‚`\n`+ SSet.hoFunctorâ‚‚Map`\n`+ SSet.hoFunctorâ‚‚Obj`\n`+ SSet.hoFunctorâ‚‚Obj.lift_unique'`\n`+ SSet.hoFunctorâ‚‚Obj.quotientFunctor`\n`+ SSet.hoFunctorâ‚‚_naturality`\n`+ SSet.oneTruncation`\n`+ SSet.oneTruncationâ‚‚`\n`+ SSet.Î´â‚‚`\n`+ SSet.Ïƒâ‚‚`\n`+ ar`\n`+ ar'`\n`+ ar'succ`\n`+ cosk2Iso`\n`+ cosk2NatIso.component`\n`+ cosk2NatTrans`\n`+ cosk2RightExtension.component.hom.iso`\n`+ cosk2RightExtension.hom`\n`+ cosk2RightExtension.hom_isIso`\n`+ fact.map.arr`\n`+ fact.obj.arr`\n`+ forgetToReflQuiv.natIso`\n`+ hoFunctor.ofTwoTruncation.iso`\n`+ hoFunctor.ofTwoTruncation.natIso`\n`+ instance (C : Cat) : Mono (nerveâ‚‚.seagull C)`\n`+ instance (S : SSet) : ReflQuiver (SSet.OneTruncation S)`\n`+ instance (S : SSet.Truncated 2) : ReflQuiver (SSet.OneTruncationâ‚‚ S)`\n`+ instance (V : SSet.Truncated.{u} 2) : Category.{u} (SSet.hoFunctorâ‚‚Obj V)`\n`+ instance (V : SSet.{u}) : Category.{u} (SSet.hoCat V)`\n`+ instance : HasColimits Cat.{v, v}`\n`+ instance : Reflective nerveFunctor`\n`+ isPointwiseRightKanExtension`\n`+ isPointwiseRightKanExtension.isUniversal`\n`+ isPointwiseRightKanExtensionAt`\n`+ isRightKanExtension`\n`+ nerveAdjunction`\n`+ nerveCounitNatIso`\n`+ nerveCounit_isIso`\n`+ nerveFunctor.faithful`\n`+ nerveFunctor.full`\n`+ nerveFunctor.fullyfaithful`\n`+ nerveFunctorâ‚‚`\n`+ nerveFunctorâ‚‚.faithful`\n`+ nerveFunctorâ‚‚.full`\n`+ nerveFunctorâ‚‚.fullyfaithful`\n`+ nerveRightExtension`\n`+ nerveRightExtension.coneAt`\n`+ nerveâ‚‚`\n`+ nerveâ‚‚.seagull`\n`+ nerveâ‚‚Adj`\n`+ nerveâ‚‚Adj.counit`\n`+ nerveâ‚‚Adj.counit.component`\n`+ nerveâ‚‚Adj.counit.component_eq`\n`+ nerveâ‚‚Adj.counit.naturality'`\n`+ nerveâ‚‚Adj.reflective`\n`+ nerveâ‚‚Adj.unit`\n`+ nerveâ‚‚Adj.unit.component`\n`+ nerveâ‚‚Adj.unit.component_eq`\n`+ nerveâ‚‚RestrictedIso`\n`+ nerveâ‚‚_restrictedNerve`\n`+ oneTruncationâ‚‚_toNerveâ‚‚Mk'`\n`+ opstuff.{w}`\n`+ pt`\n`+ pt'`\n`+ ran.lift`\n`+ ran.lift'`\n`+ ran.lift.eq`\n`+ ran.lift.eqâ‚‚`\n`+ ran.lift.map`\n`+ strArr.homEv`\n`+ strArr.homEv.map`\n`+ strArr.homEvSucc`\n`+ toNerveâ‚‚.ext`\n`+ toNerveâ‚‚.ext'`\n`+ toNerveâ‚‚.mk`\n`+ toNerveâ‚‚.mk'`\n`+ toNerveâ‚‚.mk.app`\n`+ toNerveâ‚‚.mk.app_one`\n`+ toNerveâ‚‚.mk.app_two`\n`+ toNerveâ‚‚.mk.app_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-09-13T20:55:44Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MFQTz",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#16779~~\n* ~~leanprover-community/mathlib4#16780~~\n* ~~leanprover-community/mathlib4#16781~~\n* leanprover-community/mathlib4#16782\n* leanprover-community/mathlib4#16783\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-09-13T21:02:30Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d14eca976e868727b35ce2479e563460fb2ac83b",
                "additions": 343,
                "deletions": 1,
                "committedDate": "2024-10-09T19:38:21Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk1rA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890932/job/31316325804"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk4fQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261891114/job/31316326525"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk4dw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261891112/job/31316326519"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk1wg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890937/job/31316325826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk4tA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890931/job/31316326580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk6Rw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261891119/job/31316326983"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk2aw",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890931/job/31316325995"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk3AQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890937/job/31316326145"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk5TA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261891119/job/31316326732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk3ag",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890931/job/31316326250"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk4Ww",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890937/job/31316326491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpk5zQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890937/job/31316326861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSppaEQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261890931/job/31316400657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSplZvw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31316335039"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSpnOcw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16782&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d9abb3c745125273107ef34be0d19174bd3f9d81",
                "additions": 451,
                "deletions": 0,
                "committedDate": "2024-10-09T19:48:36Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0a0d5f1ef53e8b718a31c9b7827490b54781d58b",
                "additions": 672,
                "deletions": 1,
                "committedDate": "2024-10-09T19:48:44Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_nUA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023900/job/31316764496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_sCw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262024275/job/31316765707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_sAQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262024267/job/31316765697"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_mmA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023894/job/31316764312"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_oPA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023892/job/31316764732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_tWw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262024286/job/31316766043"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_mcg",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023892/job/31316764274"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_obw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023894/job/31316764783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_sOw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262024286/job/31316765755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_nZw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023892/job/31316764519"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_njg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023894/job/31316764558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSp_plQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023894/job/31316765077"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSqED7w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023892/job/31316837359"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSqAMtA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31316774068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSqA-bQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16784&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-13T20:55:01Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicTopology/HomotopyCat.lean",
              "additions": 426,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicTopology/Nerve.lean",
              "additions": 343,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicTopology/NerveAdjunction.lean",
              "additions": 656,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Category/Cat/Limit.lean",
              "additions": 15,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Quotient.lean",
              "additions": 24,
              "deletions": 0
            }
          ]
        },
        "headRefName": "nerveAdjunction",
        "headRefOid": "0a0d5f1ef53e8b718a31c9b7827490b54781d58b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c57ewAP",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16784,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_nUA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023900/job/31316764496"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_sCw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262024275/job/31316765707"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_sAQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262024267/job/31316765697"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_mmA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023894/job/31316764312"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_oPA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023892/job/31316764732"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_tWw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262024286/job/31316766043"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_mcg",
                "name": "Lint style",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023892/job/31316764274"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_obw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023894/job/31316764783"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_sOw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262024286/job/31316765755"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_nZw",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023892/job/31316764519"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_njg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023894/job/31316764558"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSp_plQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023894/job/31316765077"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSqED7w",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11262023892/job/31316837359"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSqAMtA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31316774068"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHSqA-bQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16784&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(AlgebraicTopology/NerveAdjunction): nerve adjunction, Cat has colimits",
        "updatedAt": "2024-10-10T22:14:30Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16784",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MFJZ1",
              "createdAt": "2024-09-13T20:55:44Z",
              "body": "### PR summary [0a0d5f1ef5](https://github.com/leanprover-community/mathlib4/pull/16784/commits/0a0d5f1ef53e8b718a31c9b7827490b54781d58b)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +89.98% | `Mathlib.CategoryTheory.Category.Cat.Limit` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Category.Cat.Limit | 429 | 815 | +386 (+89.98%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Category.Cat.Limit`|386|\n| `Mathlib.AlgebraicTopology.HomotopyCat`|809|\n| `Mathlib.AlgebraicTopology.NerveAdjunction`|810|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CompClosure.congruence`\n`+ SSet.HoRel`\n`+ SSet.HoRel.ext_triangle`\n`+ SSet.HoRelâ‚‚`\n`+ SSet.HoRelâ‚‚.ext_triangle`\n`+ SSet.OneTruncation`\n`+ SSet.OneTruncation.Hom`\n`+ SSet.OneTruncation.ofNerve`\n`+ SSet.OneTruncation.ofNerve.hom`\n`+ SSet.OneTruncation.ofNerve.inv`\n`+ SSet.OneTruncation.ofNerve.map`\n`+ SSet.OneTruncation.ofNerve.natIso`\n`+ SSet.OneTruncation.src`\n`+ SSet.OneTruncation.tgt`\n`+ SSet.OneTruncationâ‚‚`\n`+ SSet.OneTruncationâ‚‚.Hom`\n`+ SSet.OneTruncationâ‚‚.ofTwoTruncationIso`\n`+ SSet.OneTruncationâ‚‚.src`\n`+ SSet.OneTruncationâ‚‚.tgt`\n`+ SSet.hoCat`\n`+ SSet.hoFunctor`\n`+ SSet.hoFunctor'`\n`+ SSet.hoFunctorMap`\n`+ SSet.hoFunctorâ‚‚`\n`+ SSet.hoFunctorâ‚‚Map`\n`+ SSet.hoFunctorâ‚‚Obj`\n`+ SSet.hoFunctorâ‚‚Obj.lift_unique'`\n`+ SSet.hoFunctorâ‚‚Obj.quotientFunctor`\n`+ SSet.hoFunctorâ‚‚_naturality`\n`+ SSet.oneTruncation`\n`+ SSet.oneTruncationâ‚‚`\n`+ SSet.Î´â‚‚`\n`+ SSet.Ïƒâ‚‚`\n`+ ar`\n`+ ar'`\n`+ ar'succ`\n`+ cosk2Iso`\n`+ cosk2NatIso.component`\n`+ cosk2NatTrans`\n`+ cosk2RightExtension.component.hom.iso`\n`+ cosk2RightExtension.hom`\n`+ cosk2RightExtension.hom_isIso`\n`+ fact.map.arr`\n`+ fact.obj.arr`\n`+ forgetToReflQuiv.natIso`\n`+ hoFunctor.ofTwoTruncation.iso`\n`+ hoFunctor.ofTwoTruncation.natIso`\n`+ instance (C : Cat) : Mono (nerveâ‚‚.seagull C)`\n`+ instance (S : SSet) : ReflQuiver (SSet.OneTruncation S)`\n`+ instance (S : SSet.Truncated 2) : ReflQuiver (SSet.OneTruncationâ‚‚ S)`\n`+ instance (V : SSet.Truncated.{u} 2) : Category.{u} (SSet.hoFunctorâ‚‚Obj V)`\n`+ instance (V : SSet.{u}) : Category.{u} (SSet.hoCat V)`\n`+ instance : HasColimits Cat.{v, v}`\n`+ instance : Reflective nerveFunctor`\n`+ isPointwiseRightKanExtension`\n`+ isPointwiseRightKanExtension.isUniversal`\n`+ isPointwiseRightKanExtensionAt`\n`+ isRightKanExtension`\n`+ nerveAdjunction`\n`+ nerveCounitNatIso`\n`+ nerveCounit_isIso`\n`+ nerveFunctor.faithful`\n`+ nerveFunctor.full`\n`+ nerveFunctor.fullyfaithful`\n`+ nerveFunctorâ‚‚`\n`+ nerveFunctorâ‚‚.faithful`\n`+ nerveFunctorâ‚‚.full`\n`+ nerveFunctorâ‚‚.fullyfaithful`\n`+ nerveRightExtension`\n`+ nerveRightExtension.coneAt`\n`+ nerveâ‚‚`\n`+ nerveâ‚‚.seagull`\n`+ nerveâ‚‚Adj`\n`+ nerveâ‚‚Adj.counit`\n`+ nerveâ‚‚Adj.counit.component`\n`+ nerveâ‚‚Adj.counit.component_eq`\n`+ nerveâ‚‚Adj.counit.naturality'`\n`+ nerveâ‚‚Adj.reflective`\n`+ nerveâ‚‚Adj.unit`\n`+ nerveâ‚‚Adj.unit.component`\n`+ nerveâ‚‚Adj.unit.component_eq`\n`+ nerveâ‚‚RestrictedIso`\n`+ nerveâ‚‚_restrictedNerve`\n`+ oneTruncationâ‚‚_toNerveâ‚‚Mk'`\n`+ opstuff.{w}`\n`+ pt`\n`+ pt'`\n`+ ran.lift`\n`+ ran.lift'`\n`+ ran.lift.eq`\n`+ ran.lift.eqâ‚‚`\n`+ ran.lift.map`\n`+ strArr.homEv`\n`+ strArr.homEv.map`\n`+ strArr.homEvSucc`\n`+ toNerveâ‚‚.ext`\n`+ toNerveâ‚‚.ext'`\n`+ toNerveâ‚‚.mk`\n`+ toNerveâ‚‚.mk'`\n`+ toNerveâ‚‚.mk.app`\n`+ toNerveâ‚‚.mk.app_one`\n`+ toNerveâ‚‚.mk.app_two`\n`+ toNerveâ‚‚.mk.app_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5VwDFL",
              "createdAt": "2024-09-13T20:56:04Z",
              "source": {
                "id": "PR_kwDOFcwZ1c57esmD",
                "title": "[Merged by Bors] - feat(Combinatorics/Quiver/ReflQuiver): reflexive quivers",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16780"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5VwDOz",
              "createdAt": "2024-09-13T20:56:19Z",
              "source": {
                "id": "PR_kwDOFcwZ1c57erK1",
                "title": "[Merged by Bors] - feat(CategoryTheory/EqToHom): simp lemmas for heq + eqToHom",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16779"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5VwDR3",
              "createdAt": "2024-09-13T20:56:29Z",
              "source": {
                "id": "PR_kwDOFcwZ1c57etwt",
                "title": "[Merged by Bors] - feat(AlgebraicTopology/SimplicialSet): SimplicialSet (co)skeleton properties",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16781"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5VwDWt",
              "createdAt": "2024-09-13T20:56:37Z",
              "source": {
                "id": "PR_kwDOFcwZ1c57euXl",
                "title": "feat(AlgebraicTopology/Nerve): nerve is 2-coskeletal",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16782"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5VwDrP",
              "createdAt": "2024-09-13T20:56:58Z",
              "source": {
                "id": "PR_kwDOFcwZ1c57evTn",
                "title": "feat(AlgebraicTopology/HomotopyCat): SSet.hoFunctor",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16783"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6WiuJSzwAAAANRoXKq",
              "createdAt": "2024-09-13T20:58:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6WiuJSzwAAAANRofn8",
              "createdAt": "2024-09-13T21:02:29Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MFQTz",
              "createdAt": "2024-09-13T21:02:30Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#16779~~\n* ~~leanprover-community/mathlib4#16780~~\n* ~~leanprover-community/mathlib4#16781~~\n* leanprover-community/mathlib4#16782\n* leanprover-community/mathlib4#16783\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6WiuJSzwAAAANSGcM1",
              "createdAt": "2024-09-15T06:01:34Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6WiuJSzwAAAANTWCIg",
              "createdAt": "2024-09-17T02:15:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6WiuJSzwAAAANk9my5",
              "createdAt": "2024-10-09T19:49:09Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6WiuJSzwAAAANk9otX",
              "createdAt": "2024-10-09T19:49:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6WiuJSzwAAAANk-sba",
              "createdAt": "2024-10-09T20:14:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6WiuJSzwAAAANmGkKt",
              "createdAt": "2024-10-10T22:14:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
